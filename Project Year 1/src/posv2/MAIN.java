/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package posv2;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author doublethesky
 */
public class MAIN extends javax.swing.JFrame {

	/**
	 * Creates new form MAIN
	 */
	public MAIN() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                InforProduct = new javax.swing.JTable();
                ProductIDTEXT = new javax.swing.JLabel();
                ProductIDSE = new javax.swing.JTextField();
                ProductBrandTEXT = new javax.swing.JLabel();
                ProductBrandTE = new javax.swing.JTextField();
                ProductName = new javax.swing.JLabel();
                ProductNameTE = new javax.swing.JTextField();
                ProductPriceTX = new javax.swing.JLabel();
                ProductAmountTE = new javax.swing.JTextField();
                ProductPriceTX1 = new javax.swing.JLabel();
                ProductPriceTE1 = new javax.swing.JTextField();
                SPID = new javax.swing.JButton();
                AddProductBT = new javax.swing.JButton();
                ProductIDTE0 = new javax.swing.JTextField();
                jScrollPane2 = new javax.swing.JScrollPane();
                OrderTable = new javax.swing.JTable();
                AddToOrder = new javax.swing.JButton();
                RemoveFromOrder = new javax.swing.JButton();
                SearchTable = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jLabel3 = new javax.swing.JLabel();
                AddSelect = new javax.swing.JButton();
                SubTotalPriceLabel = new javax.swing.JLabel();
                Totalprice0 = new javax.swing.JLabel();
                TaxShow = new javax.swing.JLabel();
                Taxnum = new javax.swing.JLabel();
                Totalallz = new javax.swing.JLabel();
                totalznum = new javax.swing.JLabel();
                Cal = new javax.swing.JButton();
                Print = new javax.swing.JButton();
                Totalallz3 = new javax.swing.JLabel();
                changeTF = new javax.swing.JTextField();
                inputCASH = new javax.swing.JTextField();
                CASH = new javax.swing.JLabel();
                jScrollPane3 = new javax.swing.JScrollPane();
                bill_space = new javax.swing.JTextPane();
                jButton1 = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                InforProduct.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ProductID", "ProductBrand", "ProductName", "Price", "Amount"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                        };
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                InforProduct.setToolTipText("");
                jScrollPane1.setViewportView(InforProduct);

                ProductIDTEXT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                ProductIDTEXT.setText("ProductID : ");

                ProductIDSE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

                ProductBrandTEXT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                ProductBrandTEXT.setText("ProductBrand :");

                ProductBrandTE.setEditable(false);
                ProductBrandTE.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

                ProductName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                ProductName.setText("ProductName :");

                ProductNameTE.setEditable(false);
                ProductNameTE.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

                ProductPriceTX.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                ProductPriceTX.setText("Price :         ");

                ProductAmountTE.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

                ProductPriceTX1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                ProductPriceTX1.setText("Amount :");

                ProductPriceTE1.setEditable(false);
                ProductPriceTE1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

                SPID.setText("Search ProductID");
                SPID.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                SPIDMouseClicked(evt);
                        }
                });

                AddProductBT.setText("Add New Product");
                AddProductBT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                AddProductBTActionPerformed(evt);
                        }
                });

                ProductIDTE0.setEditable(false);
                ProductIDTE0.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

                OrderTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ProductID", "ProductBrand", "ProductName", "Price", "QTY"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                        };
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                OrderTable.setToolTipText("");
                jScrollPane2.setViewportView(OrderTable);

                AddToOrder.setText("AddToOrder");
                AddToOrder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                AddToOrderMouseClicked(evt);
                        }
                });

                RemoveFromOrder.setText("RemoveFromOrder");
                RemoveFromOrder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                RemoveFromOrderMouseClicked(evt);
                        }
                });
                RemoveFromOrder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                RemoveFromOrderActionPerformed(evt);
                        }
                });

                SearchTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                SearchTable.setToolTipText("Search Product In Table");
                SearchTable.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                SearchTableKeyPressed(evt);
                        }
                });

                jLabel1.setText("Search");

                jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                jLabel2.setText("Product");

                jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
                jLabel3.setText("Order");

                AddSelect.setText("AddSelectToOrder");
                AddSelect.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                AddSelectMouseClicked(evt);
                        }
                });

                SubTotalPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                SubTotalPriceLabel.setText("SubTotal");

                Totalprice0.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                Totalprice0.setText("0");

                TaxShow.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                TaxShow.setText("Tax (7%)");

                Taxnum.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                Taxnum.setText("0");

                Totalallz.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                Totalallz.setText("Total");

                totalznum.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                totalznum.setText("0");

                Cal.setText("Compute");
                Cal.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                CalMouseClicked(evt);
                        }
                });

                Print.setText("Print");
                Print.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                PrintMouseClicked(evt);
                        }
                });

                Totalallz3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                Totalallz3.setText("Change");

                changeTF.setEditable(false);
                changeTF.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                changeTFActionPerformed(evt);
                        }
                });

                inputCASH.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                inputCASHActionPerformed(evt);
                        }
                });

                CASH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                CASH.setText("CASH");

                bill_space.setEditable(false);
                jScrollPane3.setViewportView(bill_space);

                jButton1.setText("Generate Receipt");
                jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                jButton1MouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(AddSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(SubTotalPriceLabel)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(Totalprice0))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(TaxShow)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(totalznum)
                                                                        .addComponent(Taxnum)))
                                                        .addComponent(Totalallz))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(417, 417, 417)
                                                                .addComponent(CASH)
                                                                .addGap(79, 79, 79)
                                                                .addComponent(Totalallz3)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 593, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(476, 476, 476)
                                                                .addComponent(Cal)
                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(SearchTable, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(AddProductBT, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(4, 4, 4)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(ProductIDTEXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(ProductBrandTEXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(ProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(ProductPriceTX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(ProductPriceTX1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addComponent(inputCASH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(AddToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(37, 37, 37)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(ProductNameTE, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(ProductBrandTE, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                                                                        .addComponent(ProductPriceTE1)
                                                                                        .addComponent(ProductAmountTE)
                                                                                        .addComponent(ProductIDTE0)
                                                                                        .addComponent(RemoveFromOrder))
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(26, 26, 26)
                                                                                .addComponent(changeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(48, 48, 48)
                                                                .addComponent(ProductIDSE, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(SPID, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel3)
                                                                .addGap(31, 31, 31)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addGap(34, 34, 34)
                                                .addComponent(Print)
                                                .addGap(65, 65, 65))))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(SPID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(ProductIDSE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(SearchTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(AddProductBT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProductIDTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ProductIDTE0))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProductBrandTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ProductBrandTE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ProductNameTE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProductPriceTX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ProductPriceTE1))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProductPriceTX1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ProductAmountTE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(AddToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(RemoveFromOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(95, 95, 95)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(CASH)
                                                        .addComponent(Totalallz3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(inputCASH, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(changeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(Cal)
                                                .addGap(105, 105, 105))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton1)
                                                        .addComponent(Print))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addComponent(AddSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(SubTotalPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Totalprice0))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(TaxShow, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Taxnum))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(Totalallz)
                                                        .addComponent(totalznum))
                                                .addGap(46, 46, 46))))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void AddProductBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductBTActionPerformed
		ADD2 add = new ADD2();
		add.setVisible(true);
        }//GEN-LAST:event_AddProductBTActionPerformed

        private void SPIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SPIDMouseClicked
		showdataintext();
        }//GEN-LAST:event_SPIDMouseClicked

        private void AddToOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddToOrderMouseClicked
		int yesno = JOptionPane.showConfirmDialog(null,"Add To Order?" ,"Yes",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
		if(yesno == JOptionPane.YES_OPTION){
			if(ProductIDTE0.getText().equals("")){
				JOptionPane.showMessageDialog (null, "Please Select Product" );
			}else{

				AddItemsToOrderRow();
			}
		}else{
			if(ProductIDTE0.getText().equals("")){
				JOptionPane.showMessageDialog (null, "Please Select Product" );
				
			}
//			autoshowinfo();
		}
        }//GEN-LAST:event_AddToOrderMouseClicked

        private void RemoveFromOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveFromOrderMouseClicked
		removeOrder();
        }//GEN-LAST:event_RemoveFromOrderMouseClicked

        private void RemoveFromOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveFromOrderActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_RemoveFromOrderActionPerformed

        private void SearchTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTableKeyPressed
		DefaultTableModel InforRow= (DefaultTableModel) InforProduct.getModel();
		String search  = SearchTable.getText().toLowerCase();
		TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(InforRow);
		InforProduct.setRowSorter(tr);
		tr.setRowFilter(RowFilter.regexFilter(search));
                // TODO add your handling code here:
        }//GEN-LAST:event_SearchTableKeyPressed

        private void AddSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddSelectMouseClicked
		DefaultTableModel M1 = (DefaultTableModel) InforProduct.getModel();
			if(InforProduct.getSelectedRowCount()==1){
		for(int i  = 0 ; i< InforProduct.getRowCount(); i++ ){
			if(InforProduct.getValueAt(i, 0).toString().equals(M1.getValueAt(i, 0).toString()));
				ProductIDTE0.setText(M1.getValueAt(InforProduct.getSelectedRow(), 0).toString());
				ProductBrandTE.setText(M1.getValueAt(InforProduct.getSelectedRow(), 1).toString());
				ProductNameTE.setText(M1.getValueAt(InforProduct.getSelectedRow(), 2).toString());
				ProductPriceTE1.setText(M1.getValueAt(InforProduct.getSelectedRow(), 3).toString());
				ProductAmountTE.setText(M1.getValueAt(InforProduct.getSelectedRow(), 4).toString());
				ProductIDSE.setText(M1.getValueAt(InforProduct.getSelectedRow(),0).toString());
			}
		}

        }//GEN-LAST:event_AddSelectMouseClicked

        private void CalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalMouseClicked
		cal_cash();
        }//GEN-LAST:event_CalMouseClicked

        private void changeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTFActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_changeTFActionPerformed

        private void inputCASHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCASHActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_inputCASHActionPerformed

        private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
		SimpleDateFormat df1 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        		Date date = new Date();
		bill_space.setText("        ---MADE BY WARAYUT SAISI--- \n");
		bill_space.setText(""+bill_space.getText()+"        --- date"+df1.format(date)+"---\n");
		bill_space.setText(""+bill_space.getText()+"-----------------------------------------------------\n");
		for(int i = 0 ; i <OrderTable.getRowCount();i++){
			for(int j = 0 ; j<OrderTable.getColumnCount();j++){
					Double pricedb = Double.parseDouble(OrderTable.getValueAt(i,3).toString());
					String price = df.format(pricedb);
					bill_space.setText(bill_space.getText()+""+OrderTable.getValueAt(i, 0).toString()+"     	"+OrderTable.getValueAt(i,4).toString()+"     	"
						+price+"\n"+OrderTable.getValueAt(i, 2)+"\n\n");
					break;
			}
		}
		bill_space.setText(""+bill_space.getText()+"-----------------------------------------------------\n");
		String totalprice = df.format(totalpriceall);
		bill_space.setText(bill_space.getText()+""+"Total"+"     	"+"     	"+totalprice);
		
		
        }//GEN-LAST:event_jButton1MouseClicked

        private void PrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintMouseClicked
		try{
			
			bill_space.print();
		}
		catch(Exception e ){

		}
        }//GEN-LAST:event_PrintMouseClicked
//        public void autoshowinfo(){
//		DefaultTableModel InforRow = (DefaultTableModel) InforProduct.getModel();
//			if(InforProduct.getSelectedRowCount() ==1){
//				ProductIDTE0.setText(InforRow.getValueAt(InforProduct.getSelectedRow(), 0).toString());
//				ProductBrandTE.setText(InforRow.getValueAt(InforProduct.getSelectedRow(), 1).toString());
//				ProductNameTE.setText(InforRow.getValueAt(InforProduct.getSelectedRow(), 2).toString());
//				ProductPriceTE1.setText(InforRow.getValueAt(InforProduct.getSelectedRow(), 3).toString());
//				ProductAmountTE.setText(InforRow.getValueAt(InforProduct.getSelectedRow(), 4).toString());
//			}
//	}
        public void showdataintext(){
		DefaultTableModel M1 = (DefaultTableModel) InforProduct.getModel();
		for(int i  = 0 ; i< InforProduct.getRowCount(); i++ ){
			
			if(ProductIDSE.getText().equals(M1.getValueAt(i,0).toString())){
				ProductIDTE0.setText(M1.getValueAt(i, 0).toString());
				ProductBrandTE.setText(M1.getValueAt(i, 1).toString());
				ProductNameTE.setText(M1.getValueAt(i, 2).toString());
				ProductPriceTE1.setText(M1.getValueAt(i, 3).toString());
				ProductAmountTE.setText(M1.getValueAt(i, 4).toString());
			}
//			else{
//				JOptionPane.showMessageDialog (null, "not found ProductID Name" +" ' "+ProductIDSE.getText()+" ' ");
//				
//			}
		}
		
	}
		static DecimalFormat df = new DecimalFormat("#,##0.00");
		 static double totalpriceall = 0 ; 
        public static void cal_money(){
		
		//for get 1,000
		DefaultTableModel OrderRow = (DefaultTableModel) OrderTable.getModel();
		 double totalprice = 0;
		 double totaltax = 0;
		 double tax = 0.07;
		 double price = 0 ;
		 int amount = 0 ;
		for(int i = 0 ; i<OrderTable.getRowCount();i++){
			price  = Double.parseDouble(OrderRow.getValueAt(i, 3).toString());
			amount = Integer.parseInt(OrderRow.getValueAt(i,4).toString());
			totalprice += price * amount;
		}
//			String totalpricestr =Double.toString(totalprice);
			String totalpricestr = df.format(totalprice);
			Totalprice0.setText(totalpricestr);
			totaltax = totalprice *tax;
			String totaltaxstr = df.format(totaltax);
			Taxnum.setText(totaltaxstr);
			totalpriceall = totalprice + totaltax;
			String totalpriceallstr = df.format(totalpriceall);
			totalznum.setText(totalpriceallstr);
			
		
	}

		public void cal_cash(){
		 double change = 0 ;
			Double CASH =Double.parseDouble(inputCASH.getText());
			change = CASH - totalpriceall;
			String change1 = df.format(change) ;
			changeTF.setText(change1);
			
			
		}	

	         public static void AddItemsToRow(String []dataRow){
		DefaultTableModel M1 =(DefaultTableModel) InforProduct.getModel() ;
				M1.addRow(dataRow);

	}
	         public static void AddItemsToOrderRow(){
			 DefaultTableModel OrderRow = (DefaultTableModel) OrderTable.getModel();
			 DefaultTableModel inforRow = (DefaultTableModel) InforProduct.getModel();
			 
			 int Amount_ProductIntext = Integer.parseInt(ProductAmountTE.getText());
		for(int i  = 0 ; i< InforProduct.getRowCount(); i++ ){
			
			if(ProductIDSE.getText().equals(InforProduct.getValueAt(i,0).toString()) || ProductIDTE0.getText().equals(InforProduct.getValueAt(i,0)) ){
				int Amount_infor = Integer.parseInt(inforRow.getValueAt(i, 4).toString());
				 if(Amount_infor == 0 ){
				JOptionPane.showMessageDialog (null, "Our of stock" );
				}
				 else if(Amount_ProductIntext > Amount_infor){
				JOptionPane.showMessageDialog (null, "Product Not Enough To Order" );
				}
				else {
				int cal_amount = Amount_infor - Amount_ProductIntext;
				String amount = String.valueOf(cal_amount);
				InforProduct.setValueAt(amount, i, 4);
			 	OrderRow.addRow(new String []{
				 ProductIDTE0.getText(),
				 ProductBrandTE.getText(),
				 ProductNameTE.getText(),
				 ProductPriceTE1.getText(),
				 ProductAmountTE.getText(),
				 });
				cal_money();

				}
			}
				
		}
		 }
		public void removeOrder(){
			DefaultTableModel inforRow = (DefaultTableModel) InforProduct.getModel();
			DefaultTableModel OrderRow = (DefaultTableModel) OrderTable.getModel();
			if(OrderTable.getSelectedRowCount() == 1){
				ProductIDTE0.setText(OrderRow.getValueAt(OrderTable.getSelectedRow(), 0).toString());
				ProductBrandTE.setText(OrderRow.getValueAt(OrderTable.getSelectedRow(), 1).toString());
				ProductNameTE.setText(OrderRow.getValueAt(OrderTable.getSelectedRow(), 2).toString());
				ProductPriceTE1.setText(OrderRow.getValueAt(OrderTable.getSelectedRow(), 3).toString());
				ProductAmountTE.setText(OrderRow.getValueAt(OrderTable.getSelectedRow(), 4).toString());
				OrderRow.removeRow(OrderTable.getSelectedRow());
						cal_money();
				for(int i = 0 ; i< InforProduct.getRowCount();i++){
					if(ProductIDTE0.getText().equals(InforProduct.getValueAt(i, 0).toString())){
						int amount_info = Integer.parseInt(InforProduct.getValueAt(i,4).toString());
						int amount_remove = Integer.parseInt(ProductAmountTE.getText());
						int amount_all = amount_info + amount_remove;
						String amountall = String.valueOf(amount_all);
						inforRow.setValueAt(amountall, i, 4);

					}
					
				}
			}
				
			
			
			
			
	
}		
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MAIN().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton AddProductBT;
        private javax.swing.JButton AddSelect;
        private javax.swing.JButton AddToOrder;
        private javax.swing.JLabel CASH;
        private javax.swing.JButton Cal;
        private static javax.swing.JTable InforProduct;
        private static javax.swing.JTable OrderTable;
        private javax.swing.JButton Print;
        private static javax.swing.JTextField ProductAmountTE;
        private static javax.swing.JTextField ProductBrandTE;
        private javax.swing.JLabel ProductBrandTEXT;
        private static javax.swing.JTextField ProductIDSE;
        private static javax.swing.JTextField ProductIDTE0;
        private javax.swing.JLabel ProductIDTEXT;
        private javax.swing.JLabel ProductName;
        private static javax.swing.JTextField ProductNameTE;
        private static javax.swing.JTextField ProductPriceTE1;
        private javax.swing.JLabel ProductPriceTX;
        private javax.swing.JLabel ProductPriceTX1;
        private javax.swing.JButton RemoveFromOrder;
        private javax.swing.JButton SPID;
        private static javax.swing.JTextField SearchTable;
        private javax.swing.JLabel SubTotalPriceLabel;
        private javax.swing.JLabel TaxShow;
        private static javax.swing.JLabel Taxnum;
        private javax.swing.JLabel Totalallz;
        private javax.swing.JLabel Totalallz3;
        private static javax.swing.JLabel Totalprice0;
        private javax.swing.JTextPane bill_space;
        private javax.swing.JTextField changeTF;
        private javax.swing.JTextField inputCASH;
        private javax.swing.JButton jButton1;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JScrollPane jScrollPane3;
        private static javax.swing.JLabel totalznum;
        // End of variables declaration//GEN-END:variables
}
